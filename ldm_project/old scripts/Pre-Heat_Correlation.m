flyVect = { [112 111]};

%flyVect = {randi(135,1,1),randi(135,1,1),randi(135,1,1)}

%schema = [1,1,0,0 ; 0,0,1,1 ; 1,0,0,1 ; 0,1,1,0]'; 

for ii = 1:length(flyVect)
    subStats = concatenateStructures(allStats(flyVect{ii}));
    
    [sortedFlies,sfIndx] = sort(abs(subStats.allRawTurns(:,1,5)),'descend')
    flies = sortedFlies(~isnan(sortedFlies)); fliesIndx = sfIndx(~isnan(sortedFlies));
    idx = fliesIndx(flies>std(flies)*1);
    
    allHigh1 = subStats.allRawTB(idx,3,5);
    %allHigh2 = subStats.allRawTB(idx,5,5);
    lightHigh1 = subStats.lightRawTB(idx,3,5);
    %lightHigh2 = subStats.lightRawTB(idx,5,5);
    lightLow1 = subStats.lightRawTB(idx,1,5);
    %lightLow2 = subStats.lightRawTB(idx,2,5);
    darkHigh1 = subStats.darkRawTB(idx,3,5);
    %darkHigh2 = subStats.darkRawTB(idx,5,5);
    darkLow1 = subStats.darkRawTB(idx,1,5);
    %darkLow2 = subStats.darkRawTB(idx,2,5);
    
    deltaConditions(ii,:) = [nanmean(abs(mean([lightHigh1,darkHigh1],2) - darkLow1)),...
        nanmean(abs(allHigh1 - lightLow1))]

    [corr1,~,corr1L,corr1U] = corrcoef(mean([lightHigh1,darkHigh1],2),darkLow1,'rows','pairwise')
    [corr2,~,corr2L,corr2U] = corrcoef(mean([lightHigh1,darkHigh1],2),lightLow1,'rows','pairwise')
    corrConditions(ii,:) = [corr1(1,2) corr2(1,2)];
    corrConditionsE(ii,:) = [corr1U(1,2)-corr1L(1,2) corr2U(1,2)-corr2L(1,2)]/2
    
end

% subplot(2,1,1)
bar(deltaConditions')
ylim([0 0.35])
% subplot(2,1,2)
colormap(winter)
%%
 barwitherr(corrConditionsE,corrConditions)
% ylim([0 1])
% flyVect

set(gca,'XTickLabel',{'Wedge Neurons','PS>PB Inputs','LAL Outputs'},'FontSize',24,'XTick',1:3,...
    'XTickLabelRotation',45)
ylabel('Correlation Coefficient')
title('High Temperature Turn Bias correlated with low temperature Dark or Light Bias')
legend('Dark','Light')
shg


%%

list = [allStats{25}.labels(1,1),...
    allStats{24}.labels(1,1),...
    allStats{35}.labels(1,1),...
    allStats{34}.labels(1,1),...
    allStats{100}.labels(1,1),...
    allStats{99}.labels(1,1),...
    allStats{125}.labels(1,1),...
    allStats{124}.labels(1,1),...
    allStats{71}.labels(1,1),...
    allStats{70}.labels(1,1),...
    allStats{93}.labels(1,1)]

data = {[allStats{25}.lightRawTB(:,[1 3]) allStats{25}.darkRawTB(:,[1 3])],...
    [allStats{24}.lightRawTB(:,[1 3]) allStats{24}.darkRawTB(:,[1 3])],...
    [allStats{35}.lightRawTB(:,[1 3]) allStats{35}.darkRawTB(:,[1 3])],...
    [allStats{34}.lightRawTB(:,[1 3]) allStats{34}.darkRawTB(:,[1 3])],...
    [allStats{100}.lightRawTB(:,[1 3]) allStats{100}.darkRawTB(:,[1 3])],...
    [allStats{99}.lightRawTB(:,[1 3]) allStats{99}.darkRawTB(:,[1 3])],...
    [allStats{125}.lightRawTB(:,[1 3]) allStats{125}.darkRawTB(:,[1 3])],...
    [allStats{124}.lightRawTB(:,[1 3]) allStats{124}.darkRawTB(:,[1 3])],...
    [allStats{71}.lightRawTB(:,[1 3]) allStats{71}.darkRawTB(:,[1 3])],...
    [allStats{70}.lightRawTB(:,[1 3]) allStats{70}.darkRawTB(:,[1 3])],...
    [allStats{93}.lightRawTB(:,[1 3]) allStats{93}.darkRawTB(:,[1 3])]}

%% 

list(12:15) = [allStats{3}.labels(1,1),...
    allStats{2}.labels(1,1),...
    allStats{14}.labels(1,1),...
    allStats{13}.labels(1,1)]

data(12:15) = {[allStats{3}.lightRawTB(:,[1 3]) allStats{3}.darkRawTB(:,[1 3])],...
    [allStats{2}.lightRawTB(:,[1 3]) allStats{2}.darkRawTB(:,[1 3])],...
    [allStats{14}.lightRawTB(:,[1 3]) allStats{14}.darkRawTB(:,[1 3])],...
    [allStats{13}.lightRawTB(:,[1 3]) allStats{13}.darkRawTB(:,[1 3])]}

listNeurons = {'E-PG','E-PG','E-PG','E-PG','E-PG','E-PG','PsIb-P',...
    'PsIb-P','PF-LalRub','PF-LalRub','PF-LalRub','All Photoreceptors',...
    'All Photoreceptors','R1-R6','R1-R6'}

data{16} = list;
data{17} = listNeurons;
%% 
data1{1} = {[allStats{2}.lightRawTB(:,[1 3]) allStats{2}.darkRawTB(:,[1 3])],...
    [allStats{1}.lightRawTB(:,[1 3]) allStats{1}.darkRawTB(:,[1 3])]}

list1(1:2) = [allStats{2}.labels(1,1),...
    allStats{1}.labels(1,1)]
%%
data2{1} = {[allStats{112}.lightRawTB(:,[1 3]) allStats{112}.darkRawTB(:,[1 3])],...
    [allStats{111}.lightRawTB(:,[1 3]) allStats{111}.darkRawTB(:,[1 3])]}

list2(1:2) = [allStats{112}.labels(1,1),...
    allStats{111}.labels(1,1)]